x-general: &general
  restart: always
  networks: 
    - test-local
    
services:
  test-nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks: 
    - test-local
    - my-shared-kafka-network
   
  test-db:
    image: postgres:14.3-alpine
    container_name: test-db
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: FinBeat
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "testdb_data:/var/lib/postgresql/data"
    ports:
      - "5434:5432"
    <<: *general
    
  test-back:
    build:
      context: .
      dockerfile: ./Source/VoskanyanFinBeatApi/Dockerfile
    container_name: test-back
    environment: 
        ASPNETCORE_ENVIRONMENT: development
        ConnectionStrings__PostgreConnectionString: 'Host=test-db;Port=5432;User ID=postgres;Password=postgres;Database=FinBeat;Pooling=true;'
        ConnectionStrings__KafkaBootstrapServers: 'test-kafka:29092'
      # TZ: "Europe/Moscow"
        ASPNETCORE_URLS: 'http://0.0.0.0:5500'
      # Kestrel__Endpoints__Http__Url: 'http://0.0.0.0:5500'
        Swagger__ServerPrefixForSwagger: "/api"
        Swagger__BackendServers__1: "http://localhost:5500/api"
      # App__CorsOrigins: "http://localhost:4200,http://localhost:8080,http://localhost:8081,http://localhost:3000,http://127.0.0.1:4200"
    depends_on:
      test-db:
        condition: service_healthy
    ports:
      - 5500:5500
    restart: always
    networks: 
    - test-local
    - my-shared-kafka-network
    
  test-ui:
    build:
      context: .
      args:
        environment: production
      dockerfile: ./ui/FinBeatClient/Dockerfile
    container_name: test-ui
    environment:
      TZ: "Europe/Moscow"
    ports:
      - 4200:80
    <<: *general

volumes:
  testdb_data:

networks:
  test-local:
    name: test-local
    external: false
  my-shared-kafka-network:
    external: true