x-general: &general
  restart: always
  networks: 
    - my-shared-kafka-network
    
services:
  test-zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zookeeper
    container_name: test-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "sh", "-c", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5  
    volumes:
      - "zookeeper_data:/var/lib/zoo/data"
    <<: *general
      
  test-kafka:
    image: confluentinc/cp-kafka:7.5.3
    hostname: kafka
    container_name: test-kafka
    ports:
      - "9092:9092"
      - "9093:9093" 
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      test-zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "kafka-topics --bootstrap-server localhost:29092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - "kafka_data:/var/lib/kafka/data"
    <<: *general

  test-kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:7.5.3
    hostname: kafka-rest-proxy
    container_name: test-kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka:29092'
    depends_on:
      test-kafka:
        condition: service_healthy
      # Если вы используете Schema Registry, добавьте его сюда:
      # test-schema-registry:
      #   condition: service_healthy
    <<: *general
    
volumes:
  zookeeper_data:
  kafka_data:

networks:
  my-shared-kafka-network:
    external: true